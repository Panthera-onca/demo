package com.example.demo.service;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.bo.userBean;




@Controller 
@RequestMapping(path="/demo") 
public class MainController {
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CrudRepository<userBean, UUID> userRepository;
	
	@PostMapping(path="/add") // Map ONLY POST Requests
	  public @ResponseBody String addNewUtilisateur (@RequestParam String username, @RequestParam String nom
	      , @RequestParam String prenom, @RequestParam String password, @RequestParam String address, @RequestParam int codePostal
	      , @RequestParam String ville ) {
	    // @ResponseBody means the returned String is the response, not a view name
	    // @RequestParam means it is a parameter from the GET or POST request

	    userBean n = new userBean();
	    n.setUsername(username);
	    n.setNom(nom);
	    n.setPrenom(prenom);
	    n.setPassword(password);
	    n.setAddress(address);
	    n.setCodePostal(codePostal);
	    n.setVille(ville);
	    userRepository.save(n);
	    return "Saved";
	  }

	  @GetMapping(path="/all")
	  public @ResponseBody Iterable<userBean> getAllUsers() {
	    // This returns a JSON or XML with the users
	    return userRepository.findAll();
	  }

}
